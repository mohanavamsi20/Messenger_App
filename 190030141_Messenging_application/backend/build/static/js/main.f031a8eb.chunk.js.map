{"version":3,"sources":["Toaster.js","Pages/LoginPage.js","Pages/RegisterPage.js","Pages/DashboardPage.js","Pages/IndexPage.js","Pages/ChatroomPage.js","App.js","index.js"],"names":["Toast","Swal","mixin","showConfirmButton","timer","onOpen","toast","addEventListener","stopTimer","resumeTimer","makeToast","type","msg","fire","title","withRouter","props","emailRef","React","createRef","passwordRef","className","htmlFor","name","id","placeholder","ref","onClick","email","current","value","password","axios","post","then","response","data","message","localStorage","setItem","token","history","push","setupSocket","catch","err","Grid","container","item","Link","href","variant","RegisterPage","nameRef","DashboardPage","useState","chatrooms","setChatrooms","useEffect","getChatrooms","get","headers","Authorization","getItem","setTimeout","map","chatroom","key","_id","to","IndexPage","console","log","match","socket","chatroomId","params","messages","setMessages","messageRef","useRef","userId","setUserId","payload","JSON","parse","atob","split","on","newMessages","emit","i","App","setSocket","newSocket","io","query","path","component","exact","render","ReactDOM","document","getElementById"],"mappings":"iRAEMA,EAAQC,IAAKC,MAAM,CACvBC,mBAAmB,EACnBC,MAAO,IACPC,OAAQ,SAACC,GACPA,EAAMC,iBAAiB,aAAcN,IAAKO,WAC1CF,EAAMC,iBAAiB,aAAcN,IAAKQ,gBAU/BC,EANG,SAACC,EAAMC,GACvBZ,EAAMa,KAAK,CACTC,MAAOF,K,mCC8DIG,eApEG,SAACC,GACjB,IAAMC,EAAWC,IAAMC,YACjBC,EAAcF,IAAMC,YA6B1B,OACE,yBAAKE,UAAU,QACb,yBAAKA,UAAU,cAAf,SACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,SAAf,SACA,2BACEX,KAAK,QACLY,KAAK,QACLC,GAAG,QACHC,YAAY,kBACZC,IAAKT,KAGT,yBAAKI,UAAU,cACb,2BAAOC,QAAQ,YAAf,YACA,2BACEX,KAAK,WACLY,KAAK,WACLC,GAAG,WACHC,YAAY,gBACZC,IAAKN,KAGT,4BAAQO,QAnDI,WAChB,IAAMC,EAAQX,EAASY,QAAQC,MACzBC,EAAWX,EAAYS,QAAQC,MAErCE,IACGC,KAAK,mCAAoC,CACxCL,QACAG,aAEDG,MAAK,SAACC,GACLzB,EAAU,UAAWyB,EAASC,KAAKC,SACnCC,aAAaC,QAAQ,WAAYJ,EAASC,KAAKI,OAC/CxB,EAAMyB,QAAQC,KAAK,cACnB1B,EAAM2B,iBAEPC,OAAM,SAACC,GAGJA,GACAA,EAAIV,UACJU,EAAIV,SAASC,MACbS,EAAIV,SAASC,KAAKC,SAElB3B,EAAU,QAASmC,EAAIV,SAASC,KAAKC,cA4BvC,SACA,kBAACS,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,GACR,kBAACC,EAAA,EAAD,CAAMC,KAAK,sCAAsCC,QAAQ,SACtD,yCCiBFC,EA7EM,SAACpC,GACpB,IAAMqC,EAAUnC,IAAMC,YAChBF,EAAWC,IAAMC,YACjBC,EAAcF,IAAMC,YA6B1B,OACE,yBAAKE,UAAU,QACb,yBAAKA,UAAU,cAAf,gBACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,QAAf,QACA,2BACEX,KAAK,OACLY,KAAK,OACLC,GAAG,OACHC,YAAY,WACZC,IAAK2B,KAGT,2BAAO/B,QAAQ,SAAf,SACA,2BACEX,KAAK,QACLY,KAAK,QACLC,GAAG,QACHC,YAAY,kBACZC,IAAKT,KAGT,yBAAKI,UAAU,cACb,2BAAOC,QAAQ,YAAf,YACA,2BACEX,KAAK,WACLY,KAAK,WACLC,GAAG,WACHC,YAAY,gBACZC,IAAKN,KAGT,4BAAQO,QA5DS,SAACX,GACpB,IAAMO,EAAO8B,EAAQxB,QAAQC,MACvBF,EAAQX,EAASY,QAAQC,MACzBC,EAAWX,EAAYS,QAAQC,MAErCE,IACGC,KAAK,sCAAuC,CAC3CV,OACAK,QACAG,aAEDG,MAAK,SAACC,GACLzB,EAAU,UAAWyB,EAASC,KAAKC,SACnCrB,EAAMyB,QAAQC,KAAK,aAEpBE,OAAM,SAACC,GAGJA,GACAA,EAAIV,UACJU,EAAIV,SAASC,MACbS,EAAIV,SAASC,KAAKC,SAElB3B,EAAU,QAASmC,EAAIV,SAASC,KAAKC,cAqCzC,YACA,kBAACS,EAAA,EAAD,CAAMC,WAAS,GACT,kBAACD,EAAA,EAAD,CAAME,MAAI,GACR,kBAACC,EAAA,EAAD,CAAMC,KAAK,mCAAmCC,QAAQ,SACnD,wCCrBFG,EAlDO,SAACtC,GAAW,IAAD,EACGE,IAAMqC,SAAS,IADlB,mBACxBC,EADwB,KACbC,EADa,KAqB/B,OAJAvC,IAAMwC,WAAU,YAfK,SAAfC,IACJ3B,IACG4B,IAAI,iCAAkC,CACrCC,QAAS,CACPC,cAAe,UAAYxB,aAAayB,QAAQ,eAGnD7B,MAAK,SAACC,GACLsB,EAAatB,EAASC,SAEvBQ,OAAM,SAACC,GACNmB,WAAWL,EAAc,QAK7BA,KAEC,IAED,yBAAKtC,UAAU,QACb,yBAAKA,UAAU,cAAf,aACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,gBAAf,iBACA,2BACEX,KAAK,OACLY,KAAK,eACLC,GAAG,eACHC,YAAY,uBAIlB,mDACA,yBAAKJ,UAAU,aACZmC,EAAUS,KAAI,SAACC,GAAD,OACb,yBAAKC,IAAKD,EAASE,IAAK/C,UAAU,YAChC,6BAAM6C,EAAS3C,MACf,kBAAC,IAAD,CAAM8C,GAAI,aAAeH,EAASE,KAChC,yBAAK/C,UAAU,QAAf,gBC7BCiD,EAdG,SAACtD,GAWjB,OAVAE,IAAMwC,WAAU,WACd,IAAMlB,EAAQF,aAAayB,QAAQ,YACnCQ,QAAQC,IAAIhC,GACPA,EAGHxB,EAAMyB,QAAQC,KAAK,cAFnB1B,EAAMyB,QAAQC,KAAK,YAKpB,CAAC,IACG,+B,QC6EM3B,eAvFM,SAAC,GAAuB,IAArB0D,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACvBC,EAAaF,EAAMG,OAAOpD,GADU,EAEVN,IAAMqC,SAAS,IAFL,mBAEnCsB,EAFmC,KAEzBC,EAFyB,KAGpCC,EAAa7D,IAAM8D,SAHiB,EAId9D,IAAMqC,SAAS,IAJD,mBAInC0B,EAJmC,KAI3BC,EAJ2B,KAiD1C,OAjCAhE,IAAMwC,WAAU,WACd,IAAMlB,EAAQF,aAAayB,QAAQ,YACnC,GAAIvB,EAAO,CACT,IAAM2C,EAAUC,KAAKC,MAAMC,KAAK9C,EAAM+C,MAAM,KAAK,KACjDL,EAAUC,EAAQ3D,IAEhBkD,GACFA,EAAOc,GAAG,cAAc,SAACnD,GACvB,IAAMoD,EAAW,sBAAOZ,GAAP,CAAiBxC,IAClCyC,EAAYW,QAIf,CAACZ,IAEJ3D,IAAMwC,WAAU,WAOd,OANIgB,GACFA,EAAOgB,KAAK,WAAY,CACtBf,eAIG,WAEDD,GACFA,EAAOgB,KAAK,YAAa,CACvBf,kBAKL,IAGD,yBAAKtD,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,cAAf,iBACA,yBAAKA,UAAU,mBACZwD,EAASZ,KAAI,SAAC5B,EAASsD,GAAV,OACZ,yBAAKxB,IAAKwB,EAAGtE,UAAU,WACrB,0BACEA,UACE4D,IAAW5C,EAAQ4C,OAAS,aAAe,gBAG5C5C,EAAQd,KALX,KAMQ,IACPc,EAAQA,aAIf,yBAAKhB,UAAU,mBACb,6BACE,2BACEV,KAAK,OACLY,KAAK,UACLE,YAAY,iBACZC,IAAKqD,KAGT,6BACE,4BAAQ1D,UAAU,OAAOM,QAxEf,WACd+C,IACFA,EAAOgB,KAAK,kBAAmB,CAC7Bf,aACAtC,QAAS0C,EAAWlD,QAAQC,QAG9BiD,EAAWlD,QAAQC,MAAQ,MAiErB,e,iBCdG8D,MAxDf,WAAgB,IAAD,EACe1E,IAAMqC,SAAS,MAD9B,mBACNmB,EADM,KACEmB,EADF,KAGPlD,EAAc,SAAdA,IAEJ,GADcL,aAAayB,QAAQ,cACrBW,EAAQ,CACpB,IAAMoB,EAAYC,IAAG,wBAAyB,CAC5CC,MAAO,CACLxD,MAAOF,aAAayB,QAAQ,eAIhC+B,EAAUN,GAAG,cAAc,WACzBK,EAAU,MACV7B,WAAWrB,EAAa,KACxBjC,EAAU,QAAS,2BAGrBoF,EAAUN,GAAG,WAAW,WACtB9E,EAAU,UAAW,wBAGvBmF,EAAUC,KASd,OALA5E,IAAMwC,WAAU,WACdf,MAEC,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsD,KAAK,IAAIC,UAAW5B,EAAW6B,OAAK,IAC3C,kBAAC,IAAD,CACEF,KAAK,SACLG,OAAQ,kBAAM,kBAAC,EAAD,CAAWzD,YAAaA,KACtCwD,OAAK,IAEP,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW9C,EAAc+C,OAAK,IACtD,kBAAC,IAAD,CACEF,KAAK,aACLG,OAAQ,kBAAM,kBAAC,EAAD,CAAe1B,OAAQA,KACrCyB,OAAK,IAEP,kBAAC,IAAD,CACEF,KAAK,gBACLG,OAAQ,kBAAM,kBAAC,EAAD,CAAc1B,OAAQA,KACpCyB,OAAK,O,cCrDfE,IAASD,OAAO,kBAAC,EAAD,MAASE,SAASC,eAAe,U","file":"static/js/main.f031a8eb.chunk.js","sourcesContent":["import Swal from \"sweetalert2\";\r\n\r\nconst Toast = Swal.mixin({\r\n  showConfirmButton: true,\r\n  timer: 2000,\r\n  onOpen: (toast) => {\r\n    toast.addEventListener(\"sans-serif\", Swal.stopTimer);\r\n    toast.addEventListener(\"sans-serif\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\nconst makeToast = (type, msg) => {\r\n  Toast.fire({\r\n    title: msg,\r\n  });\r\n};\r\n\r\nexport default makeToast;\r\n","import React from \"react\";\r\nimport makeToast from \"../Toaster\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst LoginPage = (props) => {\r\n  const emailRef = React.createRef();\r\n  const passwordRef = React.createRef();\r\n\r\n  const loginUser = () => {\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/user/login\", {\r\n        email,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        makeToast(\"success\", response.data.message);\r\n        localStorage.setItem(\"CC_Token\", response.data.token);\r\n        props.history.push(\"/dashboard\");\r\n        props.setupSocket();\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n        if (\r\n          err &&\r\n          err.response &&\r\n          err.response.data &&\r\n          err.response.data.message\r\n        )\r\n          makeToast(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"cardHeader\">Login</div>\r\n      <div className=\"cardBody\">\r\n        <div className=\"inputGroup\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"abc@example.com\"\r\n            ref={emailRef}\r\n          />\r\n        </div>\r\n        <div className=\"inputGroup\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Your Password\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n        <button onClick={loginUser}>Login</button>\r\n        <Grid container>\r\n            <Grid item>\r\n              <Link href=\"http://localhost:8000/user/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport makeToast from \"../Toaster\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst RegisterPage = (props) => {\r\n  const nameRef = React.createRef();\r\n  const emailRef = React.createRef();\r\n  const passwordRef = React.createRef();\r\n\r\n  const registerUser = (props) => {\r\n    const name = nameRef.current.value;\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/user/register\", {\r\n        name,\r\n        email,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        makeToast(\"success\", response.data.message);\r\n        props.history.push(\"/login\");\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n        if (\r\n          err &&\r\n          err.response &&\r\n          err.response.data &&\r\n          err.response.data.message\r\n        )\r\n          makeToast(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"cardHeader\">Registration</div>\r\n      <div className=\"cardBody\">\r\n        <div className=\"inputGroup\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"John Doe\"\r\n            ref={nameRef}\r\n          />\r\n        </div>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"abc@example.com\"\r\n          ref={emailRef}\r\n        />\r\n      </div>\r\n      <div className=\"inputGroup\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"Your Password\"\r\n          ref={passwordRef}\r\n        />\r\n      </div>\r\n      <button onClick={registerUser}>Register</button>\r\n      <Grid container>\r\n            <Grid item>\r\n              <Link href=\"http://localhost:8000/user/login\" variant=\"body2\">\r\n                {\"already have an account? Sign In\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashboardPage = (props) => {\r\n  const [chatrooms, setChatrooms] = React.useState([]);\r\n  const getChatrooms = () => {\r\n    axios\r\n      .get(\"http://localhost:8000/chatroom\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\"),\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setChatrooms(response.data);\r\n      })\r\n      .catch((err) => {\r\n        setTimeout(getChatrooms, 3000);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getChatrooms();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"cardHeader\">Chatrooms</div>\r\n      <div className=\"cardBody\">\r\n        <div className=\"inputGroup\">\r\n          <label htmlFor=\"chatroomName\">Chatroom Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"chatroomName\"\r\n            id=\"chatroomName\"\r\n            placeholder=\"ChatterBox Nepal\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <button>Create Chatroom</button>\r\n      <div className=\"chatrooms\">\r\n        {chatrooms.map((chatroom) => (\r\n          <div key={chatroom._id} className=\"chatroom\">\r\n            <div>{chatroom.name}</div>\r\n            <Link to={\"/chatroom/\" + chatroom._id}>\r\n              <div className=\"join\">Join</div>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import React from \"react\";\r\n\r\nconst IndexPage = (props) => {\r\n  React.useEffect(() => {\r\n    const token = localStorage.getItem(\"CC_Token\");\r\n    console.log(token);\r\n    if (!token) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      props.history.push(\"/dashboard\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [0]);\r\n  return <div></div>;\r\n};\r\n\r\nexport default IndexPage;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ChatroomPage = ({ match, socket }) => {\r\n  const chatroomId = match.params.id;\r\n  const [messages, setMessages] = React.useState([]);\r\n  const messageRef = React.useRef();\r\n  const [userId, setUserId] = React.useState(\"\");\r\n  const sendMessage = () => {\r\n    if (socket) {\r\n      socket.emit(\"chatroomMessage\", {\r\n        chatroomId,\r\n        message: messageRef.current.value,\r\n      });\r\n\r\n      messageRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const token = localStorage.getItem(\"CC_Token\");\r\n    if (token) {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      setUserId(payload.id);\r\n    }\r\n    if (socket) {\r\n      socket.on(\"newMessage\", (message) => {\r\n        const newMessages = [...messages, message];\r\n        setMessages(newMessages);\r\n      });\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [messages]);\r\n\r\n  React.useEffect(() => {\r\n    if (socket) {\r\n      socket.emit(\"joinRoom\", {\r\n        chatroomId,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      //Component Unmount\r\n      if (socket) {\r\n        socket.emit(\"leaveRoom\", {\r\n          chatroomId,\r\n        });\r\n      }\r\n    };\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chatroomPage\">\r\n      <div className=\"chatroomSection\">\r\n        <div className=\"cardHeader\">Chatroom Name</div>\r\n        <div className=\"chatroomContent\">\r\n          {messages.map((message, i) => (\r\n            <div key={i} className=\"message\">\r\n              <span\r\n                className={\r\n                  userId === message.userId ? \"ownMessage\" : \"otherMessage\"\r\n                }\r\n              >\r\n                {message.name}:\r\n              </span>{\" \"}\r\n              {message.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chatroomActions\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"message\"\r\n              placeholder=\"Say something!\"\r\n              ref={messageRef}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button className=\"join\" onClick={sendMessage}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ChatroomPage);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport LoginPage from \"./Pages/LoginPage\";\r\nimport RegisterPage from \"./Pages/RegisterPage\";\r\nimport DashboardPage from \"./Pages/DashboardPage\";\r\nimport IndexPage from \"./Pages/IndexPage\";\r\nimport ChatroomPage from \"./Pages/ChatroomPage\";\r\nimport io from \"socket.io-client\";\r\nimport makeToast from \"./Toaster\";\r\n\r\nfunction App() {\r\n  const [socket, setSocket] = React.useState(null);\r\n\r\n  const setupSocket = () => {\r\n    const token = localStorage.getItem(\"CC_Token\");\r\n    if (token && !socket) {\r\n      const newSocket = io(\"http://localhost:8000\", {\r\n        query: {\r\n          token: localStorage.getItem(\"CC_Token\"),\r\n        },\r\n      });\r\n\r\n      newSocket.on(\"disconnect\", () => {\r\n        setSocket(null);\r\n        setTimeout(setupSocket, 3000);\r\n        makeToast(\"error\", \"Socket Disconnected!\");\r\n      });\r\n\r\n      newSocket.on(\"connect\", () => {\r\n        makeToast(\"success\", \"Socket Connected!\");\r\n      });\r\n\r\n      setSocket(newSocket);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setupSocket();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" component={IndexPage} exact />\r\n        <Route\r\n          path=\"/login\"\r\n          render={() => <LoginPage setupSocket={setupSocket} />}\r\n          exact\r\n        />\r\n        <Route path=\"/register\" component={RegisterPage} exact />\r\n        <Route\r\n          path=\"/dashboard\"\r\n          render={() => <DashboardPage socket={socket} />}\r\n          exact\r\n        />\r\n        <Route\r\n          path=\"/chatroom/:id\"\r\n          render={() => <ChatroomPage socket={socket} />}\r\n          exact\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles/common.css\";\r\nimport \"./styles/chatroom.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}